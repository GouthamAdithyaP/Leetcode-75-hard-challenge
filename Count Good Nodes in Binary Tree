class Solution {
    public int goodNodes(TreeNode root) {
        return countGoodNodes(root, Integer.MIN_VALUE);
    }
    private int countGoodNodes(TreeNode node, int maxSoFar) {
        if (node == null) {
            return 0;
        }
        int count = 0;
        // Check if the current node i
        if (node.val >= maxSoFar) {
            count++;
        }
        
        // Update the maximum value encountered so far in the path
        maxSoFar = Math.max(maxSoFar, node.val);
        
        // Recursively visit the left and right subtrees
        count += countGoodNodes(node.left, maxSoFar);
        count += countGoodNodes(node.right, maxSoFar);
        
        return count;
    }
}
