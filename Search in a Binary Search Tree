class Solution:
    def searchBST(self, root: Optional[TreeNode], val: int) -> Optional[TreeNode]:
        # Base case: if root is None or root's value equals val, return root
        if root is None or root.val == val:
            return root
        
        # If val is less than root's value, search in the left subtree
        if val < root.val:
            return self.searchBST(root.left, val)
        # If val is greater than root's value, search in the right subtree
        else:
            return self.searchBST(root.right, val)
