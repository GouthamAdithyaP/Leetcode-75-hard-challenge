class Solution:
    def find_min(self, node):
        while node.left:
            node = node.left
        return node
    
    def deleteNode(self, root: Optional[TreeNode], key: int) -> Optional[TreeNode]:
        if root is None:
            return None
        
        # Search for the node with the given key
        if key < root.val:
            root.left = self.deleteNode(root.left, key)
        elif key > root.val:
            root.right = self.deleteNode(root.right, key)
        else:
            # Node with the given key is found
            if root.left is None:
                return root.right
            elif root.right is None:
                return root.left
            
            # Node has two children
            min_right = self.find_min(root.right)
            root.val = min_right.val
            root.right = self.deleteNode(root.right, min_right.val)
        
        return root
